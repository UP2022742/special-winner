version: '3'

services:
    steam_compare_api:
        build:
            context: solid-octo-broccoli/backend
            dockerfile: Dockerfile
        command: ["python","-m","uvicorn","main:app","--host","0.0.0.0","--port","3000"]
        ports:
            - "3000:3000"

    steam_compare_web:
        build:
            context: solid-octo-broccoli/frontend
            dockerfile: Dockerfile
        command: ["python","-m","uvicorn","main:app","--host","0.0.0.0",'--port','3001']
        ports:
            - "3001:3001"
            
    static_page_web:
        image: static_page_web
        build: mcrrobinson.github.io/WebServer
        container_name: static_page_web
        restart: always
        volumes:
          - "./etc/letsencrypt/live/mcrrobinson.com/fullchain.pem:/fullchain.pem"
          - "./etc/letsencrypt/live/mcrrobinson.com/privkey.pem:/privkey.pem"
        ports:
          - "4000:4000"
          
    ryan_air_api:
        image: ryan_air_api
        build: aspiring-diamond
        command: ["python","-m","uvicorn","main:app","--host","0.0.0.0",'--port','8000']
        container_name: ryan_air_api
        restart: always
        ports:
            - "8000:8000"

    static_server_api:
        image: static_server_api
        build: static-server
        command: ["python","-m","uvicorn","main:app","--host","0.0.0.0",'--port','5000']
        container_name: static_server_api
        restart: always
        ports:
            - "5000:5000"
        
    haproxy:
      image: haproxy:2.5.7
      volumes:
        - ./haproxy:/haproxy-override
        - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
        - ./etc/letsencrypt/live/mcrrobinson.com/mcrrobinson.com.pem:/usr/local/etc/certs/mcrrobinson.com.pem:ro
      ports:
        - "443:443"

    db:
      image: postgres:14.2-alpine
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - PRODUCER_USER=producer
        - PRODUCER_PASS=producer
        - CONSUMER_USER=consumer
        - CONSUMER_PASS=consumer
        - DB_NAME=models
      ports:
        - 5432:5432
      volumes:
        - ./literate-octo-guacamole/data:/var/lib/postgresql/data
        - ./literate-octo-guacamole/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

    livelong_web:
      build:
        context: ./literate-octo-guacamole
        dockerfile: Dockerfile.frontend
      image: frontend
      ports:
        - 8081:8081

    livelong_api:
      build:
        context: ./literate-octo-guacamole
        dockerfile: Dockerfile.aggregator
      command: ["uvicorn", "aggregator.main:app", "--proxy-headers", "--host", "0.0.0.0", "--port", "8080"]
      image: aggregator
      depends_on:
        - db
      volumes:
        - ./literate-octo-guacamole/logs:/logs